default:
  image: golang:1.20-alpine

stages:
  - test

code-testing-1:
  stage: test
  script:
    - echo "run-go-test"
    - go test ./... -covermode=atomic -coverpkg=./... -coverprofile=coverage.xml
    - go test -json ./... -covermode=atomic -coverpkg=./... -coverprofile=coverage.out
    - go vet ./... &> vet.out
  artifacts:
    paths:
      - "./coverage.out"
      - "./vet.out"
    reports:
      coverage_report:
        coverage_format: cobertura
        path: ./coverage.xml
    expire_in: 1 week

sonarqube-check:
  image:
    name: noenv/sonar-scanner:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - ls -alh && sonar-scanner
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'develop'
